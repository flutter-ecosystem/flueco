name: PR Checks and Build

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  check-commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get all commits in the PR
        id: commits
        run: |
          git fetch origin ${{ github.base_ref }}
          git log origin/${{ github.base_ref }}..HEAD --pretty=format:'%s' > commit_messages.txt

      - name: Check commit messages for Conventional Commits
        run: |
          regex='^((feat|fix|chore|docs|style|refactor|perf|test|build|ci|revert)(\([a-zA-Z0-9_-]+\))?: .+|Merge branch .+|Merge pull request .+)$'
          while IFS= read -r line; do
            if ! [[ $line =~ $regex ]]; then
              echo "❌ Commit message does not follow Conventional Commits or merge commit style: $line"
              exit 1
            fi
          done < commit_messages.txt
          echo "✅ All commit messages follow Conventional Commits or are valid merge commits."

      - name: Check branch name style
        run: |
          branch_name="${{ github.head_ref }}"
          branch_regex='^(feat|fix|chore|docs|style|refactor|perf|test|build|ci|revert)\/[a-zA-Z0-9._\/-]+$'
          if ! [[ $branch_name =~ $branch_regex ]]; then
            echo "❌ Branch name does not follow required style: $branch_name"
            echo "Branch name must start with one of: feat/, fix/, chore/, docs/, style/, refactor/, perf/, test/, build/, ci/, revert/"
            exit 1
          fi
          echo "✅ Branch name follows required style."

      - name: Check PR assignee and label
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_number="${{ github.event.pull_request.number }}"
          repo="${{ github.repository }}"
          pr_api_url="https://api.github.com/repos/$repo/pulls/$pr_number"
          pr_data=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" "$pr_api_url")
          assignees_count=$(echo "$pr_data" | jq '.assignees | length')
          labels=$(echo "$pr_data" | jq -r '.labels[].name')
          if [ "$assignees_count" -eq 0 ]; then
            echo "❌ Pull request must have at least one assignee."
            exit 1
          fi
          if ! echo "$labels" | grep -q "ready to review"; then
            echo "❌ Pull request must have the label 'ready to review'."
            exit 1
          fi
          echo "✅ Pull request has an assignee and the 'ready to review' label."

  build:
    needs: check-commits
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Verify Flutter version
        run: flutter --version
      - name: Install melos globally
        run: dart pub global activate melos
      - name: Install dependencies
        run: dart pub get --no-example && melos bs
      - name: Verify formatting on every package
        run: melos run format:check
      - name: Analyze project source of every package
        run: melos run analyze:all
      - name: Run tests on every package
        run: melos run test
